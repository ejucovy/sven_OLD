0.4 (2009-08-10)
================

 * Added simple_backend.FSAccess class, which partially implements
   the SVNAccess API, but on a plain old filesystem. Needs tests
   and documentation, among other things (e.g. justification)

 * Refactored SvnAccess to split out recently-added options for
   update_before/after_write into logically separate component

 * SvnAccess.set_kind and .write now return the pysvn.Revision of
   the (last) commit instead of None

 * Added SvnAccessEventEmitter class which executes a list of callback
   functions at the end of every successful .write and .set_kind action

   Callbacks should have the signature 
    (uri, contents, msg, kind, (pre_rev, post_rev))


0.3.1 (2009-07-28)
==================

 * Fixed bug: SvnAccess.ls was returning its contents with absolute URIs, 
   rather than URIs relative to the root of the repository.


0.3 (2009-07-25)
================

 * Removed `SvnAccess.update_after_write` knob and instead set default value of True
   to the `update_after_write` argument to `SvnAccess.write`; callers can implement
   alternatives trivially by subclassing.

 * Added `update_before_write` argument to .write with default value of True. Turn
   this off as well as `update_after_write` if you want to manage synchronicity in
   exchange for potentially significant performance improvements.

 * Added `default_commit_message` argument to `SvnAccess` constructor. The default
   is "foom".

 * Throw `exc.ResourceChanged` exceptions when a file is found to be out of date
   during a write operation (which will only happen if `update_before_write` is
   unset by the caller) and revert local changes if this happens, to restore the
   checkout to an unconflicting state.


0.2 (2009-07-25)
================

 * Now with doctests!

 * `SvnAccess.write` now supports an optional `update_after_write` argument.
   If set to a True value, calls to .write will end with an `svn up` to
   resynchronize the checkout with the repository. Default is False.

 * `SvnAccess.__init__` now supports an optional `update_after_write` argument.
   If set to a True value, all calls to .write will end with an `svn up`
   even if .write is not sent a True `update_after_write` value. Default
   is True, so if you are concerned with performance and willing to maintain
   synchronicity on your own, you should explicitly set this to False.

 * `SvnAccess.__init__` no longer executes a silent `os.chdir`.


0.1.2 (2009-07-24)
==================

First release.
